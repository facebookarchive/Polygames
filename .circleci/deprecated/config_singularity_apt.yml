# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      #- image: circleci/python:3.6.1
      #- image: singularityware/singularity:3.1-slim  # would be faster but interacts badly with cuda docker image loading

    machine: true
    working_directory: ~/repo

    steps:
      - checkout
      
      - run:
          name: Install singularity
          command: |
              #chmod u+x ~/repo/.circleci/*.sh
              #/bin/bash ~/repo/.circleci/install_singularity.sh
              sudo wget -O- http://neuro.debian.net/lists/xenial.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list && \
                  sudo apt-key adv --recv-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9 && \
                  sudo apt-get update
              sudo apt-get install -y singularity-container

      # Download and cache dependencies
      - restore_cache:
          keys:
          - test2-deps-{{ checksum "singularity/polygames.def" }}

      - run:
          name: Build singularity image
          no_output_timeout: 60m
          command: |
              IMAGE=singularity/polygames.simg
              if [ -f "$IMAGE" ]; then
                  echo "$IMAGE already exists"
              else
                  sudo -E PATH=$PATH $(which singularity) build --sandbox $IMAGE singularity/polygames.def
                  #singularity build $IMAGE singularity/polygames.def  # if using the docker image
              fi

      - save_cache:
          paths:
            - singularity/polygames.simg
          key: test2-deps-{{ checksum "singularity/polygames.def" }}
          no_output_timeout: 30m

      - run:
          name: Build polygames
          command: |
              chmod u+x ~/repo/.circleci/*.sh
              singularity exec --nv singularity/polygames.simg .circleci/build_polygames.sh
